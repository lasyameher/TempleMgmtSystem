{"ast":null,"code":"var _jsxFileName = \"/Users/ruthvikreddyvangala/tempmgmt/src/components/Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { Eventcalendar } from '@mobiscroll/react-lite';\nimport { getEvents } from 'utils/api'; // import function to fetch events data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [events, setEvents] = useState([]); // state to hold events data\n  const [selectedDate, setSelectedDate] = useState(new Date()); // state to hold selected date\n\n  // function to fetch events data on component mount and update state\n  useEffect(() => {\n    async function fetchEvents() {\n      try {\n        const eventsData = await getEvents();\n        setEvents(eventsData);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchEvents();\n  }, []);\n\n  // function to handle event click\n  const onEventClick = event => {\n    console.log(event);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between py-2 px-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-bold text-gray-800\",\n            children: selectedDate.toLocaleString('default', {\n              month: 'long',\n              year: 'numeric'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Eventcalendar, {\n          data: events,\n          view: {\n            calendar: {\n              type: 'month'\n            },\n            eventList: {\n              type: 'day'\n            }\n          },\n          onEventClick: onEventClick,\n          selectedDate: selectedDate,\n          onChange: event => setSelectedDate(event.date),\n          responsive: {\n            small: {\n              view: {\n                calendar: {\n                  type: 'day'\n                }\n              }\n            }\n          },\n          theme: \"ios\",\n          themeVariant: \"light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"ikQcTB6zon2TaCENo6LoJc3IlgM=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","Eventcalendar","getEvents","jsxDEV","_jsxDEV","Calendar","_s","events","setEvents","selectedDate","setSelectedDate","Date","fetchEvents","eventsData","error","console","onEventClick","event","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","toLocaleString","month","year","data","view","calendar","type","eventList","onChange","date","responsive","small","theme","themeVariant","_c","$RefreshReg$"],"sources":["/Users/ruthvikreddyvangala/tempmgmt/src/components/Calendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { Eventcalendar } from '@mobiscroll/react-lite';\nimport { getEvents } from 'utils/api'; // import function to fetch events data\n\nfunction Calendar() {\n  const [events, setEvents] = useState([]); // state to hold events data\n  const [selectedDate, setSelectedDate] = useState(new Date()); // state to hold selected date\n\n  // function to fetch events data on component mount and update state\n  useEffect(() => {\n    async function fetchEvents() {\n      try {\n        const eventsData = await getEvents();\n        setEvents(eventsData);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchEvents();\n  }, []);\n\n  // function to handle event click\n  const onEventClick = (event) => {\n    console.log(event);\n  };\n\n  return (\n    <div>\n      <Navbar />\n\n      <div className=\"container mx-auto px-4 py-2\">\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n          <div className=\"flex items-center justify-between py-2 px-6\">\n            <div className=\"text-lg font-bold text-gray-800\">{selectedDate.toLocaleString('default', { month: 'long', year: 'numeric' })}</div>\n          </div>\n          <Eventcalendar\n            data={events}\n            view={{\n              calendar: { type: 'month' },\n              eventList: { type: 'day' }\n            }}\n            onEventClick={onEventClick}\n            selectedDate={selectedDate}\n            onChange={(event) => setSelectedDate(event.date)}\n            responsive={{ small: { view: { calendar: { type: 'day' } } } }}\n            theme=\"ios\"\n            themeVariant=\"light\"\n          />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}