{"ast":null,"code":"var _jsxFileName = \"/Users/ruthvikreddyvangala/tempmgmt/src/components/Calendar.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { Eventcalendar } from '@mobiscroll/react-lite';\n//import { getEvents } from '..utils/api'; // import function to fetch events data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  // const [events, setEvents] = useState([]); // state to hold events data\n  // const [selectedDate, setSelectedDate] = useState(new Date()); // state to hold selected date\n\n  // // function to fetch events data on component mount and update state\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     try {\n  //       const eventsData = await getEvents();\n  //       setEvents(eventsData);\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  //   fetchEvents();\n  // }, []);\n\n  // // function to handle event click\n  // const onEventClick = (event) => {\n  //   console.log(event);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","Eventcalendar","jsxDEV","_jsxDEV","Calendar","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ruthvikreddyvangala/tempmgmt/src/components/Calendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { Eventcalendar } from '@mobiscroll/react-lite';\n//import { getEvents } from '..utils/api'; // import function to fetch events data\n\nfunction Calendar() {\n  // const [events, setEvents] = useState([]); // state to hold events data\n  // const [selectedDate, setSelectedDate] = useState(new Date()); // state to hold selected date\n\n  // // function to fetch events data on component mount and update state\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     try {\n  //       const eventsData = await getEvents();\n  //       setEvents(eventsData);\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  //   fetchEvents();\n  // }, []);\n\n  // // function to handle event click\n  // const onEventClick = (event) => {\n  //   console.log(event);\n  // };\n\n  return (\n    <div>\n      <Navbar />\n\n      {/* <div className=\"container mx-auto px-4 py-2\">\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n          <div className=\"flex items-center justify-between py-2 px-6\">\n            <div className=\"text-lg font-bold text-gray-800\">{selectedDate.toLocaleString('default', { month: 'long', year: 'numeric' })}</div>\n          </div>\n          <Eventcalendar\n            data={events}\n            view={{\n              calendar: { type: 'month' },\n              eventList: { type: 'day' }\n            }}\n            onEventClick={onEventClick}\n            selectedDate={selectedDate}\n            onChange={(event) => setSelectedDate(event.date)}\n            responsive={{ small: { view: { calendar: { type: 'day' } } } }}\n            theme=\"ios\"\n            themeVariant=\"light\"\n          />\n        </div>\n      </div>\n      <Footer /> */}\n    </div>\n  );\n}\n\nexport default Calendar;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,aAAa,QAAQ,wBAAwB;AACtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAAA,EAAG;EAClB;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACJ,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAuBN;AAEV;AAACC,EAAA,GAjDQN,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}